{"version":3,"sources":["components/Expander.js","components/TweetButton.js","components/NewQuoteButton.js","components/QuoteBox.js","App.js","index.js"],"names":["Expander","props","id","style","backgroundColor","theme","animation","status","TweetButton","b","src","alt","className","t","h","quote","hashtag","join","tweetUrl","encodeURIComponent","author","href","target","rel","color","NewQuoteButton","onClick","disabled","QuoteBox","q","map","taggy","ind","window","innerWidth","getQuote","App","useState","setTheme","quotes","setQuotes","setStatus","quotePack","setQuotePack","url","prevC","randomize","ranMax","Math","floor","random","useEffect","a","fetch","response","json","data","fetchData","catch","console","log","length","onNewQuote","newT","newQ","Promise","resolve","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef95b590.chunk.js","sourcesContent":["// external\r\n// react\r\nimport react from \"react\";\r\n\r\n//fills screen in 450ms when changing quotes, default is 0 size middle of screen\r\nconst Expander = props => {\r\n    return (\r\n        <div id=\"backAnim\"\r\n            style={{\r\n                backgroundColor: `var(--col-pri-${props.theme})`,\r\n                animation: props.status === \"busy\" ? 'expand 450ms' : 'none'\r\n            }} />\r\n    )\r\n}\r\n\r\nexport default Expander;","// external\r\n// react\r\nimport react from \"react\";\r\n\r\n//displays loading animation and is disabled when changing quotes, adds custom hashtags to tweet\r\nconst TweetButton = props => {\r\n    const b = <img src=\"https://raw.githubusercontent.com/MatchaCrisp/RandomQuote.github.io/main/src/img/loading.gif\" alt=\"loading\" className=\"small\" />\r\n    const t = <i className=\"fab fa-twitter\"></i>\r\n    const h = props.quote.hashtag.join(',');\r\n    const tweetUrl = `https://twitter.com/intent/tweet?hashtags=${h}&related=freecodecamp&text=${encodeURIComponent('\"' + props.quote.quote + '\" ' + props.quote.author)}`;\r\n    return (\r\n        <a\r\n            id='tweet-quote'\r\n            className={props.status !== 'idle' ? 'disableButton' : 'button'}\r\n            href={props.status !== 'idle' ? '#' : tweetUrl}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            style={{\r\n                backgroundColor: props.status !== 'idle' ? \"grey\" : `var(--col-pri-${props.theme})`,\r\n                color: `var(--col-acc2-${props.theme})`\r\n            }}>\r\n            {props.status !== 'idle' ? b : t}\r\n        </a>\r\n    )\r\n};\r\nexport default TweetButton;","// external\r\n// react\r\nimport react from \"react\";\r\n//displays loading animation and is disabled when changing quotes\r\nconst NewQuoteButton = props => {\r\n    const b = <img src=\"https://raw.githubusercontent.com/MatchaCrisp/RandomQuote.github.io/main/src/img/loading.gif\" alt=\"loading\" className=\"small\" />\r\n    return (\r\n        <button\r\n            id='new-quote'\r\n            className={props.status !== 'idle' ? 'disableButton' : 'button'}\r\n            onClick={props.status !== 'idle' ? null : props.onClick}\r\n            style={{\r\n                backgroundColor: props.status !== 'idle' ? \"grey\" : `var(--col-pri-${props.theme})`,\r\n                color: `var(--col-acc2-${props.theme})`\r\n            }}\r\n            disabled={props.status !== 'idle'}>\r\n            {props.status !== 'idle' ? b : 'New Quote'}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default NewQuoteButton;","// external\r\n// react\r\nimport react from \"react\";\r\n\r\n// internal\r\n// components\r\nimport TweetButton from './TweetButton';\r\nimport NewQuoteButton from './NewQuoteButton';\r\n//content box, when changing quotes displays loading animation and bounces\r\nconst QuoteBox = props => {\r\n    const q = <div id=\"contQuote\">\r\n        <ul id=\"hashtags\">{props.quote.hashtag.map((taggy, ind) => <li key={ind}>#{taggy}</li>)}</ul>\r\n        <p id=\"text\">{props.quote.quote}</p>\r\n        <p id=\"author\">-{props.quote.author}</p>\r\n    </div>\r\n    const b = <img src=\"https://raw.githubusercontent.com/MatchaCrisp/RandomQuote.github.io/main/src/img/loading.gif\" alt=\"loading\" className=\"large centered\" />\r\n\r\n    return (\r\n        <div\r\n            id='quote-box'\r\n            style={{\r\n                backgroundColor: `var(--col-acc1-${props.theme})`,\r\n                color: `var(--col-txt1-${props.theme})`,\r\n                animation: props.status === \"busy\" ? window.innerWidth >= 769 ? `bouncy2 400ms` : `bouncy 400ms` : 'none'\r\n            }}>\r\n\r\n            {props.status !== 'idle' ? b : q}\r\n\r\n            <div id=\"contButton\">\r\n                <TweetButton theme={props.theme} quote={props.quote} status={props.status} />\r\n                <NewQuoteButton onClick={props.getQuote} theme={props.theme} status={props.status} />\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default QuoteBox;","// external\r\n// react\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// internal\r\n// stylesheet\r\nimport './index.css';\r\n\r\n// components\r\nimport Expander from './components/Expander';\r\nimport QuoteBox from './components/QuoteBox';\r\n\r\nconst App = () => {\r\n    //what color theme to use \r\n    const [theme, setTheme] = useState(0);\r\n    //the entirety of quotes.json\r\n    const [quotes, setQuotes] = useState([]);\r\n    //data fetching/quote setting status\r\n    const [status, setStatus] = useState('idle');\r\n    //one quote/author passed to QuoteBOx\r\n    const [quotePack, setQuotePack] = useState({ quote: '', author: '', hashtag: [] });\r\n    //url of quotes.json\r\n    const [url] = useState(\"https://raw.githubusercontent.com/MatchaCrisp/RandomQuote.github.io/main/src/data/quotes.json\");\r\n    let prevC = 0;\r\n\r\n    //random theme/quote\r\n    const randomize = ranMax => Math.floor(Math.random() * ranMax);\r\n\r\n    //fetching quotes.json\r\n    useEffect(() => {\r\n        if (!url) return;\r\n        const fetchData = async () => {\r\n            setStatus('fetching');\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n\r\n            setQuotes(data.quotes);\r\n            setStatus('idle');\r\n        }\r\n        fetchData().catch(console.log);\r\n    }, [url]);\r\n\r\n    //initialize first quote\r\n    useEffect(() => {\r\n        if (quotes.length === 0) return;\r\n\r\n        setTheme(randomize(9));\r\n        setQuotePack(quotes[randomize(quotes.length)]);\r\n\r\n\r\n    }, [quotes]);\r\n\r\n    //loading screen at beginning while fetching, disable buttons while setting quotes\r\n    useEffect(() => {\r\n        console.log(status);\r\n    }, [status]);\r\n\r\n    //onclick for when new quote button is pressed\r\n    const onNewQuote = async () => {\r\n        setStatus('busy');\r\n        let newT = theme;\r\n        while (newT === theme) newT = randomize(9);\r\n        setTheme(newT);\r\n        let newQ = quotePack;\r\n        while (newQ === quotePack) newQ = quotes[randomize(quotes.length)];\r\n        setQuotePack(newQ);\r\n        await new Promise(resolve => setTimeout(resolve, 400));\r\n        prevC = theme;\r\n\r\n        setStatus('idle');\r\n    };\r\n\r\n\r\n    //delay loading of backdrop until expander fills screen\r\n    return (\r\n        <div\r\n            id=\"backdrop\"\r\n            style={{ backgroundColor: status === \"busy\" ? prevC : `var(--col-pri-${theme})` }}\r\n        >\r\n            <Expander theme={theme} status={status} />\r\n            <QuoteBox getQuote={onNewQuote} quote={quotePack} theme={theme} status={status} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;","// external\r\n// react\r\nimport ReactDOM from 'react-dom';\r\n\r\n// internal\r\n// components\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}